name: RAPx

on:
  workflow_dispatch:
  push:
    branches: [main,rapx-dev]
  pull_request:
    branches: [main,rapx-dev]

env:
  RAPx_VERSION: "aa0a567fd080fbb5ab1ece4740bad3b5665ca514"
  SAFETY_TOOL_VERSION: "e3e744bad0096ee1b4988dbe9a7e3f75e43e397d"

jobs:
  check-with-rapx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Clone RAPx
        run: |
          git clone https://github.com/Artisan-Lab/RAPx.git
          cd RAPx
          git checkout $RAPX_VERSION

      - name: Install RAPx
        run: |
          cd RAPx
          ./install.sh

      - name: Clone safety_tool
        run: |
          git clone https://github.com/Artisan-Lab/tag-std.git
          cd tag-std
          git checkout $SAFETY_TOOL_VERSION

      - name: Install safety_tool
        run: |
          cd tag-std/safety-tool
          TOOL_DIR=$(pwd)
          echo "TOOL_DIR=$TOOL_DIR" >> $GITHUB_ENV
          cargo install cargo-expand
          ./run.sh

      - name: Set up RAPx environment
        run: |
            RUSTUP_TOOLCHAIN=$(rustup show active-toolchain | cut -d ' ' -f 1)
            echo "RUSTUP_TOOLCHAIN=$RUSTUP_TOOLCHAIN" >> $GITHUB_ENV
            CURRENT_DIR=$(pwd)
            RUST_SRC_PATH="$CURRENT_DIR/library"
            echo "__CARGO_TESTS_ONLY_SRC_ROOT=$RUST_SRC_PATH" >> $GITHUB_ENV

      - name: Run RAPx Verification
        run: |
          cargo new dummy_crate
          cd dummy_crate
          export RUSTFLAGS="-Zcrate-attr=feature(register_tool) -Zcrate-attr=register_tool(rapx)"
          cargo +$RUSTUP_TOOLCHAIN rapx -verify-std -- -Zbuild-std=panic_abort,core,std --target x86_64-unknown-linux-gnu
